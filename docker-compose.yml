services:
  # Base de datos SQL Server
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: tesoroschoco-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=TesorosChoco123!
      - MSSQL_PID=Developer
    ports:
      - "1434:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: unless-stopped
    networks:
      - tesoroschoco-network
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "TesorosChoco123!" -Q "SELECT 1" -N -C
      interval: 30s
      timeout: 10s
      retries: 5

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: tesoroschoco-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - tesoroschoco-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API de TesorosChoco
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tesoroschoco-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=TesorosChocoDB;User Id=sa;Password=TesorosChoco123!;TrustServerCertificate=true;
      - ConnectionStrings__RedisConnection=redis:6379
    ports:
      - "5000:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - tesoroschoco-network

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local

networks:
  tesoroschoco-network:
    driver: bridge